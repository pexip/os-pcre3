Description: PCRE Library Heap Overflow Vulnerability in find_fixedlength()
 PCRE library is prone to a vulnerability which leads to Heap Overflow. 
 During subpattern calculation of a malformed regular expression, an offset
 that is used as an array index is fully controlled and can be large enough
 so that unexpected heap memory regions are accessed. 
 One could at least exploit this issue to read objects nearby of the affected
 application's memory. 
 Such information disclosure may also be used to bypass memory protection method such as ASLR.
Author: Philip Hazel <ph10@hermes.cam.ac.uk>
Origin: upstream, http://vcs.pcre.org/pcre?view=revision&revision=1571
Bug: https://bugs.exim.org/show_bug.cgi?id=1651
Bug-Debian: https://security-tracker.debian.org/tracker/CVE-2015-5073
Last-Update: 2015-06-23
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
Index: pcre3-8.35/testdata/testinput2
===================================================================
--- pcre3-8.35.orig/testdata/testinput2
+++ pcre3-8.35/testdata/testinput2
@@ -4070,4 +4070,6 @@ backtracking verbs. --/
 
 "(?J)(?'d'(?'d'\g{d}))"
 
+/(?=di(?<=(?1))|(?=(.))))/
+
 /-- End of testinput2 --/
Index: pcre3-8.35/testdata/testoutput2
===================================================================
--- pcre3-8.35.orig/testdata/testoutput2
+++ pcre3-8.35/testdata/testoutput2
@@ -14192,4 +14192,7 @@ Failed: parentheses are too deeply neste
 
 "(?J)(?'d'(?'d'\g{d}))"
 
+/(?=di(?<=(?1))|(?=(.))))/
+Failed: unmatched parentheses at offset 23
+
 /-- End of testinput2 --/
Index: pcre3-8.35/pcre_compile.c
===================================================================
--- pcre3-8.35.orig/pcre_compile.c
+++ pcre3-8.35/pcre_compile.c
@@ -9284,7 +9284,7 @@ OP_RECURSE that are not fixed length get
 exceptional ones forgo this. We scan the pattern to check that they are fixed
 length, and set their lengths. */
 
-if (cd->check_lookbehind)
+if (errorcode == 0 && cd->check_lookbehind)
   {
   pcre_uchar *cc = (pcre_uchar *)codestart;
 
